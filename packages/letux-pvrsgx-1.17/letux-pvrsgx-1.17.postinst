#! /bin/sh
# postinst script for letux-pvrsgx-1.17
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#

patch()
{ # patch binary file
	_file="$1"
	_address="$(($2))"	# should have 0x prefix
	_byte="$3"	# should have 0x prefix
	# echo printf "%x: %02x" $((_address)) $(($_byte)) | xxd -r - "$_file"
	perl -e 'print pack("c",('$_byte'))' | dd conv=notrunc of="$_file" bs=1 seek="$_address" 2>/dev/null
}

dumpbyte()
{
	_file="$1"
	_address="$(($2))"	# should have 0x prefix
	_len="$3"
	[ "$_len" ] || _len=1
	xxd -p -l $_len -s "$_address" "$_file"
}

clone()
{ # clone a repo, cd to the download and optionally checkout a specific commit
	_repo="$1"
	_branch="$2"
	_commit="$3"
	rm -rf sgx-um/
	echo git clone -b "$_branch" "$_repo" --depth=50 sgx-um
	git clone -b "$_branch" "$_repo" --depth=50 sgx-um ||
		# fallback
		# FIXME: choose correct branch/repo where we keep a copy
		git clone -b "$_branch" http://git.goldelico.com/letux-rootfs.git --depth=1 || exit
	cd sgx-um/ || exit
	[ "$_commit" ] && git checkout "$_commit"	# wants to see a specific commit
	echo clone successful
}

case "$1" in
    configure)
	if ! [ -x /usr/bin/pvrsrvctl ]
	then
		cd /var/cache
		# FIXME: base on 'sgx' compatible and machine model
		echo "installing for $(tr '\0' '@' </proc/device-tree/compatible)"
		case "@$(tr '\0' '@' </proc/device-tree/compatible)" in
			*@ti,am33xx@* )
				# for SGX530-125 with tilcdc
				clone git://git.ti.com/graphics/omap5-sgx-ddk-um-linux.git ti-img-sgx/zeus/1.17.4948957
				export TARGET_PRODUCT=ti335x
				;;
			*@ti,omap34??@* )
				# for SGX530-121 with omapdrm
				clone git://git.ti.com/graphics/omap5-sgx-ddk-um-linux.git ti-img-sgx/zeus/1.17.4948957
				export TARGET_PRODUCT=ti343x
				;;
			*@ti,am43xx@* | *@ti,omap36??@* )
				# for SGX530-125 with omapdrm
				clone git://git.ti.com/graphics/omap5-sgx-ddk-um-linux.git ti-img-sgx/zeus/1.17.4948957
				export TARGET_PRODUCT=ti437x
				;;
			*@ti,omap44??@* | *@ingenic,jz4780@* )
				# for SGX540-1?? with omapdrm
				clone git://git.ti.com/graphics/omap5-sgx-ddk-um-linux.git ti-img-sgx/zeus/1.17.4948957
				export TARGET_PRODUCT=ti443x
				;;
			*@ti,omap5@* )
				# for SGX544-116 with omapdrm
				clone git://git.ti.com/graphics/omap5-sgx-ddk-um-linux.git ti-img-sgx/zeus/1.17.4948957
				export TARGET_PRODUCT=jacinto6evm
				echo patching user space files for OMAP5432 ... >&2
				# patch binary to disable the check /sys/devices/soc0/machine for DRA7[1256]2 built into the code
				LIBSRV_UM=targetfs/$TARGET_PRODUCT/lib/libsrv_um.so
				#echo before patching... >&2
				#dumpbyte $LIBSRV_UM 0x8a3a 2
				#dumpbyte $LIBSRV_UM 0x89ea 2
				patch $LIBSRV_UM 0x8a3a 0x00	# d7 -> 00
				patch $LIBSRV_UM 0x8a3b 0xbf	# d1 -> bf
				patch $LIBSRV_UM 0x89eb 0xe0	# d0 -> e0
				#echo "...after patching (should be 00bf 04e0)" >&2
				#dumpbyte $LIBSRV_UM 0x8a3a 2
				#dumpbyte $LIBSRV_UM 0x89ea 2
				if [ "$(dumpbyte $LIBSRV_UM 0x8a3a 2)" = 00bf ] && [ "$(dumpbyte $LIBSRV_UM 0x89ea 2)" = 04e0 ]
				then
					echo ... successfully patched! >&2
				else
					echo patching failed! >&2
				fi
				;;
			*@ti,am57xx@* | *@ti,dra7@* )
				# for SGX544-116 with omapdrm
				clone git://git.ti.com/graphics/omap5-sgx-ddk-um-linux.git ti-img-sgx/zeus/1.17.4948957
				export TARGET_PRODUCT=jacinto6evm
				;;
			*--am65x--* )
				# for SGX5? with omapdrm
				clone git://git.ti.com/graphics/omap5-sgx-ddk-um-linux.git ti-img-sgx/zeus/1.17.4948957
				export TARGET_PRODUCT=ti654x
				;;
			*@ingenic,jz4780@* )
				if false	# older/other version?
				then
					wget -O sgx.tar.xz ftp://ftp.radix.pro/3pp/Imagination/ci20//sgx-um/1.14/ci20-sgx-um-1.14.3759903.tar.xz
					# needs apt-get install xz-utils
					tar xJf sgx.tar.xz
					cd ci20-sgx-um-1.14.3759903
				else
					wget -O sgx.tar https://web.archive.org/web/20180110041155if_/http://mipscreator.imgtec.com/CI20/sgx/SGX_DDK_Linux_XOrg_ES1_ES2_OGL_MAIN%403759903_binary_um.tar
					mkdir -p SGX_DDK_Linux_XOrg_ES1_ES2_OGL_MAIN@3759903_binary_um
					cd SGX_DDK_Linux_XOrg_ES1_ES2_OGL_MAIN@3759903_binary_um
					tar xf ../sgx.tar
				fi
				echo installing user space files for jz4780 >&2
				tar cf - usr | (cd / && tar xf -)
				# libgbm fix needed?
				cd ..
				rm -f sgx.tar.xz sgx.tar ci20-sgx-um-1.14.3759903 SGX_DDK_Linux_XOrg_ES1_ES2_OGL_MAIN%403759903_binary_um.tar
				;;
			*)
				echo unknown SoC: $(tr '\0' ' ' </proc/device-tree/compatible)
				exit 1
				;;
		esac

		if [ "$TARGET_PRODUCT" ]
		then	# install through makefile
			echo "installing user space files for \`$TARGET_PRODUCT'" >&2
			# these files have been removed by the last upstream updates!
			GLES_PRODUCT=$TARGET_PRODUCT
			[ "$GLES_PRODUCT" = ti343x ] && GLES_PRODUCT=ti335x
			[ "$GLES_PRODUCT" = ti443x ] && GLES_PRODUCT=ti335x
			for i in eglinfo gles1test1 gles2test1 pvr
			do # install if file is available
				git checkout 87d7e5c -- targetfs/$GLES_PRODUCT/bin/$i || true
			done
			export DISCIMAGE=/
			rm targetfs/*/etc/powervr.ini	# don't overwrite what we installed by the version from git
			make install
			# FIXME: somehow find out from lcd definition
			if [ "$TARGET_PRODUCT" = "ti335x" ]
			then	# fix pixel format for 16 bit LCDC
				echo "fix /etc/powervr.ini for \`$TARGET_PRODUCT'" >&2
				sed -i.bak 's/DefaultPixelFormat=RGB[0-9][0-9][0-9]/DefaultPixelFormat=RGB565/g' /etc/powervr.ini
			fi
			mkdir -p /usr/lib/arm-linux-gnueabihf
			rm -f /usr/lib/arm-linux-gnueabihf/libgbm.so.2
			ln -s libgbm.so.1 /usr/lib/arm-linux-gnueabihf/libgbm.so.2
			[ -f /usr/lib/libGLESv2.so.1 ] || ln -s libGLESv2.so.2 /usr/lib/libGLESv2.so.1
			ln -sf pvr_dri.so /usr/lib/dri/omapdrm_dri.so
			ln -sf pvr_dri.so /usr/lib/dri/tilcdc_dri.so
		fi

		rm -f /usr/bin/pvrsrvctl.bak

		echo "symlinking libffi.so.6"
		ln -sf libffi.so.7 /usr/lib/arm-linux-gnueabihf/libffi.so.6
	fi  
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)

    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

# Automatically added by dh_makeshlibs
if [ "$1" = "configure" ]; then
	ldconfig
fi
# End automatically added section


exit 0
